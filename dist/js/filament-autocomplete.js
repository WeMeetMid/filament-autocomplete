function l({key:s,autoSelect:i,state:o,hiddenState:u}){return{open:!1,key:s,value:null,valueProperty:null,focusedKey:null,items:null,root:null,shiftTab:!1,autoSelect:i,state:o,hiddenState:u,async init(){await new Promise(e=>setTimeout(e,150)),this.root=this.$el,this.resetFocusedKey(),this.$watch("focusedKey",()=>this.scrollFocusedIntoView()),this.$nextTick(()=>{this.$wire.watch(this.valueProperty,()=>{this.value=this.$wire.get(this.valueProperty),this.$nextTick(()=>this.itemsChanged())})})},clear(){this.clearSelectedItem(),this.clearInput()},inputFocus(){this.show()},clearInput(){this.value=null},close(){this.hide()},show(){this.open=!0},hide(){this.open=!1},focusedKeyPosition(){return this.focusableItems.indexOf(this.focusedKey)},focusedKeyFound(){return this.focusedKeyPosition()>=0},focusedKeyNotFound(){return!this.focusedKeyFound()},resetFocusedKey(){if(this.autoSelect===!0){this.focusFirst();return}this.focusedKey=null},focusedElement(){let e=typeof this.focusedKey=="string"?"'"+this.focusedKey+"'":this.focusedKey;return this.root.querySelector(`[wire\\:autocomplete-key="${e}"]`)},scrollFocusedIntoView(){let e=this.focusedElement();e&&e.scrollIntoView({behavior:"smooth",block:"nearest"})},focusedKeyIsNewItemRow(){return this.focusedKey==="_x_autocomplete_new"},focusedKeyIsNotNewItemRow(){return!this.focusedKeyIsNewItemRow()},keyPosition(e){return this.focusableItems.indexOf(e)},keyFound(e){return this.keyPosition(e)>=0},keyNotFound(e){return!this.keyFound()},firstKey(){return this.focusableItems[0]??null},lastKey(){return this.focusableItems[this.focusableItems.length-1]??null},focusKey(e){this.keyFound(e)&&(this.focusedKey=e)},focusPrevious(){let t=this.focusedKeyPosition()-1;if(this.focusableItems[t]){this.focusedKey=this.focusableItems[t];return}this.resetFocusedKey()},focusNext(){let t=this.focusedKeyPosition()+1;this.focusableItems[t]&&(this.focusedKey=this.focusableItems[t])},focusFirst(){this.focusedKey=this.firstKey()},focusLast(){this.focusedKey=this.lastKey()},outside(){this.close(),this.autoSelect&&this.notHaveSelectedItem()&&this.notHaveNewItem()&&this.clear()},escape(e){this.close(),this.autoSelect&&this.clear(),e.target.blur()},tab(){if(this.shiftTab==!0)return this.shiftTab=!1;this.selectItem()},pressShiftTab(){this.shiftTab=!0},enter(e){this.selectItem(),this.hasSelectedItem()&&(e.preventDefault(),e.target.blur())},selectItem(){this.state=this.focusedElement().getAttribute("wire:autocomplete-value"),this.hiddenState=this.focusedElement().getAttribute("wire:autocomplete-key"),this.hide()},hasSelectedItem(){return this.key!==null},notHaveSelectedItem(){return!this.hasSelectedItem()},clearSelectedItem(){this.key=null},hasNewItem(){return!!this.items.find(e=>e=="_x_autocomplete_new")},notHaveNewItem(){return!this.hasNewItem()},itemsChanged(){this.clearItems(),this.resetFocusedKey()},clearItems(){this.items=null},get focusableItems(){return this.items=[...this.root.querySelectorAll("[wire\\:autocomplete-key]:not([wire\\:autocomplete-disabled])")].map(e=>Alpine.evaluate(this.root,e.getAttribute("wire:autocomplete-key"))).filter(e=>e!="_x_autocomplete_empty"),this.items}}}export{l as default};
